const t=window.devicePixelRatio||1,e="ontouchstart"in window||navigator.maxTouchPoints>0;function n(e="analysis"){const n=document.querySelector(".board");if(!n)throw new Error("[CANVAS_ERROR] Chess board was not found!");const o=n.getBoundingClientRect();let i=document.getElementById(e);if(!i){i=document.createElement("canvas"),i.id=e,i.classList.add("board-canvas"),i.width=o.width+10,i.height=i.width,i.style.top="50%",i.style.left="50%",i.style.transform="translate(-50%, -50%)";const a=i.getContext("2d"),r=i.width+10;i.width=r*t,i.height=r*t,i.style.width=`${r}px`,i.style.height=`${r}px`,a.scale(t,t),a.translate(10,10),n.append(i)}return[n,i]}export function removeCanvas(t){if(!t)throw new Error("[CANVAS_ERROR] canvasId is required");const e=document.getElementById(t);e?.remove()}export function drawArrow({origSquareId:o,destSquareId:i,canvasId:a="analysis",color:r="limegreen"}){const[d,l]=n(a),s=document.getElementById(o),c=document.getElementById(i);if(!s||!c)throw new Error(`[CANVAS_ERROR] Unable to find the following squares: orig=${o} and dest=${i}`);let h=.5;e&&(h=0);const g=d.getBoundingClientRect(),u=g.left+h,y=g.top,w=s.getBoundingClientRect(),f=c.getBoundingClientRect(),x={x:w.left+w.width/2-u,y:w.top+w.height/2-y},m={x:f.left+f.width/2-u,y:f.top+f.height/2-y},R=m.x-x.x,C=m.y-x.y,I=Math.sqrt(R*R+C*C),p=Math.atan2(C,R),E=.95*I;m.x=x.x+Math.cos(p)*E,m.y=x.y+Math.sin(p)*E;const v=l.getContext("2d"),A=13.75-t,B=A+5;v.lineCap="round",v.lineWidth=A,v.strokeStyle=r,v.fillStyle=r,v.beginPath(),v.moveTo(x.x,x.y),v.lineTo(m.x,m.y),v.stroke();let q=Math.atan2(m.y-x.y,m.x-x.x);const S=()=>({x:B*Math.cos(q)+m.x,y:B*Math.sin(q)+m.y});v.beginPath(),v.moveTo(S().x,S().y),q+=1/3*(2*Math.PI),v.lineTo(S().x,S().y),q+=1/3*(2*Math.PI),v.lineTo(S().x,S().y),v.closePath(),v.fill(),drawCircle({canvasId:a,color:r,squareId:i})}export function drawCircle({squareId:t,canvasId:o="analysis",color:i="limegreen"}){const a=document.getElementById(t);if(!a)throw new Error(`[CANVAS_ERROR] Unable to find square: ${t}`);const[r,d]=n(o),l=d.getContext("2d");l.lineWidth=3.5,l.strokeStyle=i;let s=1;e&&(s=0);const c=r.getBoundingClientRect(),h=c.left+s,g=c.top+s,u=a.getBoundingClientRect(),y=u.width,w=u.left+y/2-h,f=u.top+y/2-g,x=.45*y,m={start:0,end:2*Math.PI};l.beginPath(),l.arc(w,f,x,m.start,m.end),l.stroke()}export function drawEmojiAtSquare({squareId:t,emoji:e="âœ…",canvasId:o="analysis"}){const i=document.getElementById(t);if(!i)throw new Error(`[CANVAS_ERROR] Unable to find square: ${t}`);const[a,r]=n(o),d=r.getContext("2d"),l=a.getBoundingClientRect(),s=i.getBoundingClientRect(),c=s.width,h=s.left+.65*s.width-l.left,g=s.top+.2*s.height-l.top;d.font=.35*c+"px Arial",d.textAlign="left",d.fillText(e,h,g)}