const t=window.devicePixelRatio||1;function e(e="analysis"){const n=document.querySelector(".board");if(!n)throw new Error("[CANVAS_ERROR] Chess board was not found!");const o=n.getBoundingClientRect();let i=document.getElementById(e);if(!i){i=document.createElement("canvas"),i.id=e,i.classList.add("board-canvas"),i.width=o.width+10,i.height=i.width,i.style.top="50%",i.style.left="50%",i.style.transform="translate(-50%, -50%)";const a=i.getContext("2d"),r=i.width+10;i.width=r*t,i.height=r*t,i.style.width=`${r}px`,i.style.height=`${r}px`,a.scale(t,t),a.translate(10,10),n.append(i)}return[n,i]}export function removeCanvas(t){if(!t)throw new Error("[CANVAS_ERROR] canvasId is required");const e=document.getElementById(t);e?.remove()}export function drawArrow({origSquareId:n,destSquareId:o,canvasId:i="analysis",color:a="limegreen"}){const[r,d]=e(i),l=document.getElementById(n),s=document.getElementById(o);if(!l||!s)throw new Error(`[CANVAS_ERROR] Unable to find the following squares: orig=${n} and dest=${o}`);const c=r.getBoundingClientRect(),h=c.left,g=c.top,u=l.getBoundingClientRect(),y=s.getBoundingClientRect(),f={x:u.left+u.width/2-h,y:u.top+u.height/2-g},w={x:y.left+y.width/2-h,y:y.top+y.height/2-g},x=w.x-f.x,m=w.y-f.y,R=Math.sqrt(x*x+m*m),C=Math.atan2(m,x),I=.95*R;w.x=f.x+Math.cos(C)*I,w.y=f.y+Math.sin(C)*I;const p=d.getContext("2d"),E=13.75-t,A=E+5;p.lineCap="round",p.lineWidth=E,p.strokeStyle=a,p.fillStyle=a,p.beginPath(),p.moveTo(f.x,f.y),p.lineTo(w.x,w.y),p.stroke();let B=Math.atan2(w.y-f.y,w.x-f.x);const v=()=>({x:A*Math.cos(B)+w.x,y:A*Math.sin(B)+w.y});p.beginPath(),p.moveTo(v().x,v().y),B+=1/3*(2*Math.PI),p.lineTo(v().x,v().y),B+=1/3*(2*Math.PI),p.lineTo(v().x,v().y),p.closePath(),p.fill(),drawCircle({canvasId:i,color:a,squareId:o})}export function drawCircle({squareId:t,canvasId:n="analysis",color:o="limegreen"}){const i=document.getElementById(t);if(!i)throw new Error(`[CANVAS_ERROR] Unable to find square: ${t}`);const[a,r]=e(n),d=r.getContext("2d");d.lineWidth=3.5,d.strokeStyle=o;const l=a.getBoundingClientRect(),s=l.left+1,c=l.top+1,h=i.getBoundingClientRect(),g=h.width,u=h.left+g/2-s,y=h.top+g/2-c,f=.45*g,w={start:0,end:2*Math.PI};d.beginPath(),d.arc(u,y,f,w.start,w.end),d.stroke()}export function drawEmojiAtSquare({squareId:t,emoji:n="âœ…",canvasId:o="analysis"}){const i=document.getElementById(t);if(!i)throw new Error(`[CANVAS_ERROR] Unable to find square: ${t}`);const[a,r]=e(o),d=r.getContext("2d"),l=a.getBoundingClientRect(),s=i.getBoundingClientRect(),c=s.width,h=s.left+.65*s.width-l.left,g=s.top+.2*s.height-l.top;d.font=.35*c+"px Arial",d.textAlign="left",d.fillText(n,h,g)}