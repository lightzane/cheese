function t(t="reviewer"){const e=document.querySelector(".board");if(!e)throw new Error("[CANVAS_ERROR] Chess board was not found!");const n=e.getBoundingClientRect();let o=document.getElementById(t);return o||(o=document.createElement("canvas"),o.id=t,o.classList.add("board-canvas"),o.width=n.width,o.height=o.width,e.append(o)),[e,o]}export function removeCanvas(t){if(!t)throw new Error("[CANVAS_ERROR] canvasId is required");const e=document.getElementById(t);e?.remove()}export function drawArrow({origSquareId:e,destSquareId:n,canvasId:o="reviewer",color:i="limegreen"}){const[r,d]=t(o),a=document.getElementById(e),l=document.getElementById(n);if(!a||!l)throw new Error(`[CANVAS_ERROR] Unable to find the following squares: orig=${e} and dest=${n}`);const c=r.getBoundingClientRect(),s=c.left,h=c.top,g=a.getBoundingClientRect(),u=l.getBoundingClientRect(),w={x:g.left+g.width/2-s,y:g.top+g.height/2-h},x={x:u.left+u.width/2-s,y:u.top+u.height/2-h},y=x.x-w.x,f=x.y-w.y,m=Math.sqrt(y*y+f*f),R=Math.atan2(f,y),C=.95*m;x.x=w.x+Math.cos(R)*C,x.y=w.y+Math.sin(R)*C;const E=d.getContext("2d");E.lineCap="round",E.lineWidth=12.5,E.strokeStyle=i,E.fillStyle=i,E.beginPath(),E.moveTo(w.x,w.y),E.lineTo(x.x,x.y),E.stroke();let v=Math.atan2(x.y-w.y,x.x-w.x);const I=()=>({x:17.5*Math.cos(v)+x.x,y:17.5*Math.sin(v)+x.y});E.beginPath(),E.moveTo(I().x,I().y),v+=1/3*(2*Math.PI),E.lineTo(I().x,I().y),v+=1/3*(2*Math.PI),E.lineTo(I().x,I().y),E.closePath(),E.fill()}export function drawEmojiAtSquare({squareId:e,emoji:n="âœ…",canvasId:o="reviewer"}){const i=document.getElementById(e);if(!i)throw new Error(`[CANVAS_ERROR] Unable to find square: ${e}`);const[r,d]=t(o),a=d.getContext("2d"),l=r.getBoundingClientRect(),c=i.getBoundingClientRect(),s=c.width,h=c.left+.65*c.width-l.left,g=c.top+.2*c.height-l.top;a.font=.35*s+"px Arial",a.textAlign="left",a.fillText(n,h,g)}